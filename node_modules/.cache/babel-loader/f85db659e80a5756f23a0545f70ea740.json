{"ast":null,"code":"import _toConsumableArray from \"/home/chof/Projects/transformers/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/chof/Projects/transformers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/chof/Projects/transformers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/chof/Projects/transformers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/chof/Projects/transformers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/chof/Projects/transformers/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/chof/Projects/transformers/src/components/TransformersListItems.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport TransformerStatus from './TransformerStatus.js';\nimport autobotsLogo from '../images/autobots-logo.png';\nimport decepticonsLogo from '../images/decepticons-logo.png';\n\nvar TransformersListItems =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TransformersListItems, _Component);\n\n  function TransformersListItems() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TransformersListItems);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TransformersListItems)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      transformers: _this.props.transformers\n    };\n\n    _this.updateStatus = function (status, id) {\n      fetch(\"https://my-json-server.typicode.com/fpiskur/transformers-api/transformers/\".concat(id), {\n        method: 'PUT',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          status: status\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this.updateState(json);\n      }).catch(function (error) {\n        return console.error('Error: ', error);\n      });\n    };\n\n    _this.updateState = function (transformer) {\n      var transformers = _toConsumableArray(_this.props.transformers);\n\n      transformers[transformer.id].status = transformer.status;\n\n      _this.setState({\n        transformers: transformers\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TransformersListItems, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(props) {\n      // deprecated!\n      // Update state.transformers when getting updated props from OverviewPage.js\n      this.setState({\n        transformers: props.transformers\n      });\n    } // Handle status update from TransformerStatus.js\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var transformers = this.state.transformers;\n      var logo = {\n        'Autobots': autobotsLogo,\n        'Decepticons': decepticonsLogo\n      };\n\n      if (this.props.notFound) {\n        return React.createElement(\"div\", {\n          className: \"text-center py-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Sorry, no results\");\n      } else {\n        return transformers.map(function (transformer) {\n          return React.createElement(\"div\", {\n            key: transformer.id,\n            className: \"row py-3 border-bottom\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col-3 col-sm-1 d-flex align-items-center justify-content-center order-1\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"pb-3 pb-sm-0\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: logo[transformer.faction],\n            style: {\n              width: '30px',\n              height: '30px'\n            },\n            \"data-toggle\": \"tooltip\",\n            title: transformer.faction,\n            alt: transformer.faction,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }))), React.createElement(\"div\", {\n            className: \"col-6 col-sm-4 col-md-3 offset-3 offset-sm-0 d-flex align-items-center order-3 order-sm-2\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, React.createElement(TransformerStatus, {\n            id: transformer.id,\n            status: transformer.status,\n            updateStatus: _this2.updateStatus,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"col-9 col-sm-5 col-md-6 order-2 order-sm-3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, transformer.name), React.createElement(\"div\", {\n            style: {\n              lineHeight: 1\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(\"small\", {\n            className: \"text-muted\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, transformer.vehicleGroup, \" / \", transformer.vehicleType, \" / \", transformer.vehicleModel)), React.createElement(\"div\", {\n            style: {\n              lineHeight: 1\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, React.createElement(\"small\", {\n            className: \"text-muted\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, \"gear:\\xA0\", Boolean(transformer.gear[0]) ? transformer.gear.join(', ') : React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, \"Inventory empty\"))), React.createElement(\"div\", {\n            className: \"d-block d-sm-none w-100 mb-3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"col-3 col-sm-2 d-flex align-items-center justify-content-end order-4\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"d-flex justify-content-end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(Link, {\n            type: \"button\",\n            className: \"btn btn-outline-secondary\",\n            to: \"edit/\".concat(transformer.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, \"Edit\"))));\n        });\n      }\n    }\n  }]);\n\n  return TransformersListItems;\n}(Component);\n\nexport default TransformersListItems;","map":{"version":3,"sources":["/home/chof/Projects/transformers/src/components/TransformersListItems.js"],"names":["React","Component","Link","TransformerStatus","autobotsLogo","decepticonsLogo","TransformersListItems","state","transformers","props","updateStatus","status","id","fetch","method","headers","body","JSON","stringify","then","response","json","updateState","catch","error","console","transformer","setState","logo","notFound","map","faction","width","height","name","lineHeight","vehicleGroup","vehicleType","vehicleModel","Boolean","gear","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport TransformerStatus from './TransformerStatus.js';\nimport autobotsLogo from '../images/autobots-logo.png';\nimport decepticonsLogo from '../images/decepticons-logo.png';\n\nclass TransformersListItems extends Component {\n\n  state = {\n    transformers: this.props.transformers\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {   // deprecated!\n    // Update state.transformers when getting updated props from OverviewPage.js\n    this.setState({ transformers: props.transformers })\n  }\n\n  // Handle status update from TransformerStatus.js\n  updateStatus = (status, id) => {\n    fetch(`https://my-json-server.typicode.com/fpiskur/transformers-api/transformers/${id}`, {\n      method: 'PUT',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ status: status })\n    })\n    .then(response => response.json())\n    .then(json => {\n      this.updateState(json)\n    })\n    .catch(error => console.error('Error: ', error));\n  }\n\n  // Update state.transformers after status change\n  updateState = (transformer) => {\n    let transformers = [...this.props.transformers];\n    transformers[transformer.id].status = transformer.status;\n    this.setState({ transformers: transformers })\n  }\n\n  render() {\n    let { transformers } = this.state;\n    let logo = {\n      'Autobots': autobotsLogo,\n      'Decepticons': decepticonsLogo\n    };\n\n    if(this.props.notFound) {\n      return (\n        <div className=\"text-center py-3\">Sorry, no results</div>\n      )\n    } else {\n      return (\n        transformers.map(transformer => (\n          <div key={transformer.id} className=\"row py-3 border-bottom\">\n            <div className=\"col-3 col-sm-1 d-flex align-items-center justify-content-center order-1\">\n              <div className=\"pb-3 pb-sm-0\">\n                <img\n                  src={logo[transformer.faction]}\n                  style={{ width: '30px', height: '30px' }}\n                  data-toggle=\"tooltip\"\n                  title={transformer.faction}\n                  alt={transformer.faction}\n                />\n              </div>\n            </div>\n\n            <div className=\"col-6 col-sm-4 col-md-3 offset-3 offset-sm-0 d-flex align-items-center order-3 order-sm-2\">\n              <TransformerStatus\n              id={transformer.id}\n              status={transformer.status}\n              updateStatus={this.updateStatus}\n            />\n            </div>\n\n            <div className=\"col-9 col-sm-5 col-md-6 order-2 order-sm-3\">\n              <div>{transformer.name}</div>\n              <div style={{ lineHeight: 1 }}>\n                <small className=\"text-muted\">\n                  { transformer.vehicleGroup } / { transformer.vehicleType } / { transformer.vehicleModel }\n                </small>\n              </div>\n              <div style={{ lineHeight: 1 }}>\n                <small className=\"text-muted\">gear:&nbsp;\n                  {Boolean(transformer.gear[0]) ? transformer.gear.join(', ') : <span>Inventory empty</span>}\n                </small>\n              </div>\n              <div className=\"d-block d-sm-none w-100 mb-3\"></div>\n            </div>\n\n            <div className=\"col-3 col-sm-2 d-flex align-items-center justify-content-end order-4\">\n              <div className=\"d-flex justify-content-end\">\n                <Link type=\"button\" className=\"btn btn-outline-secondary\" to={`edit/${transformer.id}`}>Edit</Link>\n              </div>\n            </div>\n          </div>\n        ))\n      );\n    }\n\n  }\n\n}\n\nexport default TransformersListItems;\n"]},"metadata":{},"sourceType":"module"}