{"ast":null,"code":"import _toConsumableArray from \"/home/chof/Projects/transformers/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/chof/Projects/transformers/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/chof/Projects/transformers/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/chof/Projects/transformers/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/chof/Projects/transformers/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/chof/Projects/transformers/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/chof/Projects/transformers/src/pages/AddNewPage.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport TransformerForm from '../components/TransformerForm.js';\n\nvar AddNewPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddNewPage, _Component);\n\n  function AddNewPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddNewPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddNewPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      redirect: false\n    };\n    _this.addNewInit = {\n      // Vehicles\n      availableVehicleTypes: [],\n      availableVehicleModels: [],\n      typesDisabled: true,\n      modelsDisabled: true,\n      // Transformer values\n      name: '',\n      status: 'OK',\n      faction: '',\n      gear: [],\n      vehicleGroup: '',\n      vehicleType: '',\n      vehicleModel: '',\n      id: ''\n    };\n\n    _this.getNewId = function () {\n      var transformers = _toConsumableArray(_this.props.transformers);\n\n      var highestId = transformers.map(function (transformer) {\n        return transformer.id;\n      }).reduce(function (highest, current) {\n        return Math.max(highest, current);\n      }, -Infinity);\n      return highestId + 1;\n    };\n\n    _this.addNewTransformer = function (preparedData) {\n      preparedData.id = _this.getNewId(); // asign transformers id\n\n      fetch('https://my-json-server.typicode.com/fpiskur/transformers-api/transformers/', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(preparedData)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        _this.setState({\n          redirect: true\n        });\n\n        _this.props.updateTransformersList([].concat(_toConsumableArray(_this.props.transformers), [json]));\n      }).catch(function (error) {\n        return console.error('Error: ', error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddNewPage, [{\n    key: \"render\",\n    value: function render() {\n      var redirect = this.state.redirect;\n\n      if (redirect) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"New Transformer\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(TransformerForm, {\n        factions: this.props.factions,\n        vehicleTypes: this.props.vehicleTypes,\n        init: this.addNewInit,\n        method: this.addNewTransformer,\n        submitText: \"Add Transformer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddNewPage;\n}(Component);\n\nexport default AddNewPage;","map":{"version":3,"sources":["/home/chof/Projects/transformers/src/pages/AddNewPage.js"],"names":["React","Component","Redirect","TransformerForm","AddNewPage","state","redirect","addNewInit","availableVehicleTypes","availableVehicleModels","typesDisabled","modelsDisabled","name","status","faction","gear","vehicleGroup","vehicleType","vehicleModel","id","getNewId","transformers","props","highestId","map","transformer","reduce","highest","current","Math","max","Infinity","addNewTransformer","preparedData","fetch","method","headers","body","JSON","stringify","then","response","json","setState","updateTransformersList","catch","error","console","factions","vehicleTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport TransformerForm from '../components/TransformerForm.js';\n\nclass AddNewPage extends Component {\n\n  state = {\n    redirect: false\n  }\n\n  // Initial values for the TransformerForm\n  addNewInit = {\n    // Vehicles\n    availableVehicleTypes: [],\n    availableVehicleModels: [],\n    typesDisabled: true,\n    modelsDisabled: true,\n    // Transformer values\n    name: '',\n    status: 'OK',\n    faction: '',\n    gear: [],\n    vehicleGroup: '',\n    vehicleType: '',\n    vehicleModel: '',\n    id: ''\n  }\n\n  // Generate id (next biggest number)\n  getNewId = () => {\n    let transformers = [...this.props.transformers];\n    let highestId = transformers.map(transformer => transformer.id)\n                                .reduce((highest, current) => Math.max(highest, current), -Infinity);\n    return highestId + 1;\n  }\n\n  // POST new transformer to JSON server\n  addNewTransformer = (preparedData) => {\n    preparedData.id = this.getNewId();   // asign transformers id\n    fetch('https://my-json-server.typicode.com/fpiskur/transformers-api/transformers/', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(preparedData)\n    })\n    .then(response => response.json())\n    .then(json => {\n      this.setState({ redirect: true });\n      this.props.updateTransformersList([...this.props.transformers, json]);\n    })\n    .catch(error => console.error('Error: ', error));\n  }\n\n  render() {\n\n    let { redirect } = this.state;\n    if(redirect) {\n      return <Redirect to='/' />\n    }\n    \n    return (\n      <div className=\"container\">\n\n        <h1>New Transformer</h1>\n        <hr/>\n\n        <TransformerForm\n          factions={this.props.factions}\n          vehicleTypes={this.props.vehicleTypes}\n          init={this.addNewInit}\n          method={this.addNewTransformer}\n          submitText=\"Add Transformer\"\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default AddNewPage;\n"]},"metadata":{},"sourceType":"module"}